#!/bin/bash
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#   Edd, a tiny script allowing clipboard editing
#   Author: Petr Splichal <psplicha@redhat.com>
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Simple usage message
usage() {
    cat <<-EOF
	This is Edd, a tiny script allowing clipboard editing
	Usage: [ctrl-a], ctrl-c, edd, ctrl-v :-)
	To set up alt-shift-e keyboard shortcut run: edd --shortcut
	EOF
    exit 0
}

# Set up keyboard shortcut
shortcut() {
    # Prepare command, schema, path and the whole key identification
    cmd=${EDD_COMMAND:-gnome-terminal --geometry 100x44+400+100 --command edd}
    schema="org.gnome.settings-daemon.plugins.media-keys"
    path="/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings"
    key="$schema.custom-keybinding:$path/edd/"

    # Need to append the new key to custom-keybindings list
    keys=$(gsettings get $schema custom-keybindings)
    keys=$(echo $keys | sed "s:\]:, '$path/edd/']:")
    keys=$(echo $keys | sed "s:^\[, :[:")

    # Perform the setting
    gsettings set $key "name" "Edd" &&
    gsettings set $key "binding" "<Shift><Alt>e" &&
    gsettings set $key "command" "$cmd" &&
    gsettings set $schema "custom-keybindings" "$keys"
    if [ $? -eq 0 ]; then
        echo "Shortcut successfully set up"
        exit 0
    else
        echo "Problem with setting up the shortcut"
        exit 1
    fi
}

# Detect the default text editor
editor() {
    # Nothing to be done if user editor set
    [ -n "$EDITOR" ] && return

    # Check for some most common text editors
    [ -x "/usr/bin/vim" ] && EDITOR=vim && return
    [ -x "/usr/bin/gedit" ] && EDITOR=gedit && return
    [ -x "/usr/bin/vi" ] && EDITOR=vi && return
    [ -x "/usr/bin/nano" ] && EDITOR=nano && return

    # Bail out otherwise
    echo >&2 "Sorry, no suitable text editor detected."
    echo >&2 "Hint: Set \$EDITOR variable to your favorite editor."
    exit 1
}

list() {
    i=0
    for file in `ls -t /tmp/edd.*.txt`; do
        values[$(($i*2))]=$file
        values[$(($i*2+1))]=$(head -n 10 $file)
        i=$(($i+1))
    done
    file=$(zenity --list --column File --column Text \
        --title Edd --text "Choose from previous clipboards" \
        --width 800 --height 600 \
        "${values[@]}")
    edit "$file"
}

# Edit the clipboard
edit() {
    if [ ! -e "$1" ]; then
        # Use custom prefix for the temporary file
        # (to find it easily if something goes wrong)
        file=$(mktemp /tmp/edd.XXXXXXX.txt)

        # Save the clipboard
        xclip -selection clipboard -o > $file
    else
        # File from argument exists, edit it
        file=$1
    fi

    # Edit content
    $EDITOR $file

    # Read the clipboard
    # (nohup necessary to serve the content if window closed)
    nohup xclip -selection clipboard -i < $file &>/dev/null
}

# Decide what to do
if [ "$1" == "--help" -o "$1" == "-h" ]; then
    usage
elif [ "$1" == "--shortcut" ]; then
    shortcut
elif [ "$1" == "--list" ]; then
    list
else
    editor
    edit
fi
